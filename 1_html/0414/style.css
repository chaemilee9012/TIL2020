@charset "UTF-8";
@import url(common.css);
header {
  background: #eee; }
  header:after {
    content: '';
    clear: both;
    display: inline; }
  header nav {
    float: right;
    border: 1px dashed #f00; }
  header h1 {
    font-size: 2em;
    float: left;
    border: 1px dashed #f00; }
  header nav a {
    display: inline-block; }
  header nav a:nth-of-type(1) {
    font-size: 2em;
    background-image: url(../img/img-01.jpg); }
  header nav a:nth-of-type(2) {
    font-size: 4em;
    background-image: url(../img/img-02.jpg); }
  header nav a:nth-of-type(3) {
    font-size: 6em;
    background-image: url(../img/img-03.jpg); }

section {
  clear: both; }
  section ul {
    display: flex;
    justify-content: space-between; }
    section ul li {
      border: 1px solid #333;
      height: 400px;
      width: 30%; }
      section ul li:nth-of-type(1) {
        background-image: url(../img/img-01.jpg); }
      section ul li:nth-of-type(2) {
        background-image: url(../img/img-02.jpg); }
      section ul li:nth-of-type(3) {
        background-image: url(../img/img-03.jpg); }

/*
1. 컴포넌트별 css 작성
2. 변수 선언($변수명: 값)
3. @mixin aa() {재실행 코드}
   @include aa(); → 재실행 코드 불러올 때
4. %aa { 다중선택자에 실행할 코드}
   @extend %aa{};

      ex1)
      ul{@extend %aa;}
      li{@extend %aa;}
      css → ul, li {}

      ex2)
      ul{명령}
      li{@extend ul;}
      a{@extend ul;}
      css → li, a {ul 태그 명령 추가}

5. @import '파일명'; (scss파일 호출)
6. _common.scss → css 파일로 컴파일 하지 않음
*/

/*# sourceMappingURL=style.css.map */
